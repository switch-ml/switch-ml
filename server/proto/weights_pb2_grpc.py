# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import weights_pb2 as proto_dot_weights__pb2


class WeightServiceStub(object):
    """The weight service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendWeights = channel.unary_unary(
                '/switchml.WeightService/SendWeights',
                request_serializer=proto_dot_weights__pb2.SendWeightsRequest.SerializeToString,
                response_deserializer=proto_dot_weights__pb2.SendWeightsResponse.FromString,
                )
        self.FetchWeights = channel.unary_unary(
                '/switchml.WeightService/FetchWeights',
                request_serializer=proto_dot_weights__pb2.FetchWeightsRequest.SerializeToString,
                response_deserializer=proto_dot_weights__pb2.FetchWeightsResponse.FromString,
                )


class WeightServiceServicer(object):
    """The weight service definition.
    """

    def SendWeights(self, request, context):
        """Sends model weights
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchWeights(self, request, context):
        """Get model weights
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WeightServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.SendWeights,
                    request_deserializer=proto_dot_weights__pb2.SendWeightsRequest.FromString,
                    response_serializer=proto_dot_weights__pb2.SendWeightsResponse.SerializeToString,
            ),
            'FetchWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchWeights,
                    request_deserializer=proto_dot_weights__pb2.FetchWeightsRequest.FromString,
                    response_serializer=proto_dot_weights__pb2.FetchWeightsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'switchml.WeightService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WeightService(object):
    """The weight service definition.
    """

    @staticmethod
    def SendWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/switchml.WeightService/SendWeights',
            proto_dot_weights__pb2.SendWeightsRequest.SerializeToString,
            proto_dot_weights__pb2.SendWeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/switchml.WeightService/FetchWeights',
            proto_dot_weights__pb2.FetchWeightsRequest.SerializeToString,
            proto_dot_weights__pb2.FetchWeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
